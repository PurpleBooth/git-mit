name: Release to Homebrew
on:
  push:
    tags-ignore:
    - versio-prev
jobs:
  generate-formula:
    name: Generate Homebrew Formula
    runs-on: ubuntu-latest
    steps:
    - id: get_repository_name
      name: Work out repository name
      run: echo ::set-output "name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" |
        awk -F / '{print $2}' | sed -e "s/:refs//")"
      shell: bash
    - uses: actions/checkout@v2.3.4
      name: Checkout this repository
      with:
        token: ${{ secrets.COMMITTER_TOKEN }}
        path: main-repo
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v3
      with:
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
        git-user-signingkey: true
        git-commit-gpgsign: true
        git-tag-gpgsign: true
        workdir: main-repo
    - uses: actions/checkout@v2.3.4
      with:
        repository: PurpleBooth/homebrew-repo
        token: ${{ secrets.COMMITTER_TOKEN }}
        path: homebrew-repo
        ref: main
      name: Checkout the custom tap
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v3
      with:
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
        git-user-signingkey: true
        git-commit-gpgsign: true
        git-tag-gpgsign: true
        workdir: homebrew-repo
    - run: |
        curl -Lo file.tar.gz "https://github.com/$GIT_REPO/archive/$GIT_TAG.tar.gz"
        sha256sum -b file.tar.gz | awk '{ print $1 }' > hash
        echo ::set-output "name=SHA256::$( cat hash )"
      id: hash
      shell: bash
      env:
        GIT_REPO: ${{ github.repository }}
        GIT_TAG: ${{ github.ref }}
      name: Calculate the binary hash
    - uses: cuchi/jinja2-action@v1.2.0
      with:
        template: main-repo/homebrew/formula.rb.j2
        output_file: formula.rb
        variables: |
          github_repo=${{ github.repository }}
          git_tag=${{ github.ref }}
          file_sha=${{ steps.hash.outputs.SHA256 }}
      name: Generate the template
    - shell: bash
      name: Open a PR on the custom tap repository
      run: |
        VERSION="$(echo $GIT_TAG | sed 's/^refs\/tags\///')"
        git -C homebrew-repo switch -c "$REPOSITORY_NAME-$VERSION"
        cp formula.rb "homebrew-repo/Formula/$REPOSITORY_NAME.rb"
        git -C homebrew-repo add "Formula/$REPOSITORY_NAME.rb"
        git -C homebrew-repo commit -m "fix: Update $REPOSITORY_NAME to $VERSION"
        git -C homebrew-repo push origin "$REPOSITORY_NAME-$VERSION"
        (cd homebrew-repo && gh pr create --label releases --base main --fill)
      env:
        REPOSITORY_NAME: ${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}
        GIT_TAG: ${{ github.ref }}
        GITHUB_TOKEN: ${{ secrets.COMMITTER_TOKEN }}

