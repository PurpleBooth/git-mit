"on":
  push:
    tags:
      - "*"
jobs:
  generate-formula:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          curl -Lo file.tar.gz "https://github.com/$GIT_REPO/archive/$GIT_TAG.tar.gz"
          sha256sum -b file.tar.gz | awk '{ print $1 }' > hash
          echo ::set-output "name=SHA256::$( cat hash )"
        id: hash
        shell: bash
        env:
          GIT_REPO: ${{ github.repository }}
          GIT_TAG: ${{ github.ref }}
      - uses: cuchi/jinja2-action@v1.1.0
        with:
          template: homebrew/formula.rb.j2
          output_file: formula.rb
          variables: |
            github_repo=${{ github.repository }}
            git_tag=${{ github.ref }}
            file_sha=${{ steps.hash.outputs.SHA256 }}
      - uses: actions/upload-artifact@v2
        with:
          name: formula
          path: ./formula.rb
      - uses: actions/upload-artifact@v2
        with:
          name: hash
          path: ./hash
  build:
    needs:
      - generate-formula
    runs-on: macos-latest
    steps:
      - shell: bash
        run: |
          mkdir -p $HOME/.config/gh/
          cat > $HOME/.config/gh/config.yml <<EOF
          github.com:
           - user: "$GH_USERNAME"
             oauth_token: "$GITHUB_TOKEN"
          EOF
        env:
          GH_USERNAME: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
      - id: get_repository_name
        run: echo ::set-output "name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")"
        shell: bash
      - uses: actions/download-artifact@v2
      - uses: actions/checkout@v2
        with:
          repository: PurpleBooth/homebrew-repo
          token: ${{ secrets.COMMITTER_TOKEN }}
          path: homebrew-repo
          ref: "main"
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.COMMITTER_TOKEN }}
          path: source-repo
      - id: get-brew-cache
        run: |
          echo "::set-output name=dir::$(brew --cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.get-brew-cache.outputs.dir }}
          key: ${{ runner.os }}-brew-${{ hashFiles('**/formula.rb.j2') }}
      - shell: bash
        run: |
          brew update
          brew upgrade
      - shell: bash
        run: |
          if [ ! -f "$FORMULA_LOCATION" ] || ! grep -q "$(cat ./hash/hash)" "$FORMULA_LOCATION" ; then
            cp formula/formula.rb "$FORMULA_LOCATION"
          fi
        env:
          FORMULA_LOCATION: homebrew-repo/Formula/${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}.rb
      - shell: bash
        run: |
          mkdir -p "$(brew --repo)/Library/Taps/purplebooth"
          cp -r ./homebrew-repo/. "$(brew --repo)/Library/Taps/purplebooth/homebrew-repo"
      - shell: bash
        run: |
          cd "$(brew --repo)/Library/Taps/purplebooth/homebrew-repo"
          git checkout -b "$REPOSITORY_NAME-$(echo $GIT_TAG | sed 's/^refs\/tags\///')"
          
          cd "$(brew --repo)/Library/Taps/purplebooth/homebrew-repo"
          if ! git diff-index --quiet HEAD -- ; then
            git add "$(brew --repo)/Library/Taps/purplebooth/$FORMULA_LOCATION"
            git commit -m "Update $REPOSITORY_NAME to $(echo $GIT_TAG | sed 's/^refs\/tags\///')"
            brew install github/gh/gh
            git push -f origin "$REPOSITORY_NAME-$(echo $GIT_TAG | sed 's/^refs\/tags\///')"
            gh pr create --label releases --base main --fill
          fi
        env:
          REPOSITORY_NAME: ${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}
          GIT_TAG: ${{ github.ref }}
          FORMULA_LOCATION: homebrew-repo/Formula/${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}.rb
          GITHUB_TOKEN: "${{ secrets.COMMITTER_TOKEN }}"
      - shell: bash
        run: |
          brew test-bot \
            --bintray-org="$BINTRAY_ORG" \
            --root-url="$BINTRAY_DL_URL" \
            --tap purplebooth/homebrew-repo \
            "purplebooth/repo/$REPOSITORY_NAME"
        env:
          REPOSITORY_NAME: ${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}
          BINTRAY_DL_URL: https://dl.bintray.com/purplebooth/bottles-repo
          BINTRAY_ORG: purplebooth
      - shell: bash
        run: |
          curl \
            "$BINTRAY_API_URL/packages/$BINTRAY_ORG/$REPOSITORY_NAME" \
            -u "$HOMEBREW_BINTRAY_USER:$HOMEBREW_BINTRAY_KEY" \
            -X POST \
            -H 'Content-Type: application/json' \
            -d "{ \"name\": \"$REPOSITORY_NAME\", \"vcs_url\": \"https://github.com/PurpleBooth/$REPOSITORY_NAME.git\", \"github_repo\": \"PurpleBooth/$REPOSITORY_NAME\", \"public_download_numbers\": true, \"public_stats\": true }" ||
            echo "Package probably already exists..."
        env:
          HOMEBREW_BINTRAY_USER: purplebooth
          HOMEBREW_BINTRAY_KEY: "${{ secrets.HOMEBREW_BINTRAY_KEY }}"
          BINTRAY_API_URL: https://api.bintray.com
          REPOSITORY_NAME: ${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}
          BINTRAY_ORG: purplebooth
      - shell: bash
        run: |
          brew test-bot \
            --ci-upload \
            --bintray-org="$BINTRAY_ORG" \
            --root-url="$BINTRAY_DL_URL" \
            --tap purplebooth/homebrew-repo \
            --publish
        env:
          HOMEBREW_BINTRAY_USER: purplebooth
          HOMEBREW_BINTRAY_KEY: "${{ secrets.HOMEBREW_BINTRAY_KEY }}"
          BINTRAY_DL_URL: https://dl.bintray.com/purplebooth/bottles-repo
          BINTRAY_ORG: purplebooth
      - shell: bash
        run: |
          cd "$(brew --repo)/Library/Taps/purplebooth/homebrew-repo"
          git checkout -b "$REPOSITORY_NAME-$(echo $GIT_TAG | sed 's/^refs\/tags\///')-bottle"
          git fetch && git rebase origin/main
          git push -f origin "$REPOSITORY_NAME-$(echo $GIT_TAG | sed 's/^refs\/tags\///')"
          brew install github/gh/gh
          gh pr create --label bottles --base main --fill
        env:
          REPOSITORY_NAME: ${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}
          GIT_TAG: ${{ github.ref }}
          FORMULA_LOCATION: homebrew-repo/Formula/${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}.rb
          GITHUB_TOKEN: "${{ secrets.COMMITTER_TOKEN }}"
